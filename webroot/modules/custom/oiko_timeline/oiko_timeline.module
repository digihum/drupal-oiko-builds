<?php
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function oiko_timeline_theme($existing, $type, $theme, $path) {
  return array(
    'comparative_timeline' => array(
      'variables' => array(
        'interactive' => TRUE,
        'initialData' => [],
        'default_links' => [],
        'pagestate' => FALSE,
      ),
    ),
  );
}


/**
 * Implements hook_preprocess_comparative_timeline().
 */
function oiko_timeline_preprocess_comparative_timeline(&$variables, $hook) {

  // Get a nice unique ID for this timeline.
  $variables['timeline_id'] = Drupal\Component\Utility\Html::getUniqueId('oiko_timeline');

  // Build a list of links for the timline if it's interactive.
  if (!empty($variables['interactive'])) {
    $cidoc_entity_query = \Drupal::service('entity_type.manager')->getStorage('cidoc_entity')->getQuery()
      ->condition('timeline_preselect_option', TRUE)
      ->condition('status', TRUE)
      ->sort('name');

    $place_ids = $cidoc_entity_query->execute();
    $ids = $place_ids;
    $loaded = \Drupal::service('entity_type.manager')
      ->getStorage('cidoc_entity')
      ->loadMultiple($ids);

    $view_builder = \Drupal::service('entity_type.manager')
      ->getViewBuilder('cidoc_entity');

    foreach ($loaded as $entity) {
      $rendered = $view_builder->view($entity, 'timeline_preselection');
      $variables['default_links'][$entity->id()] = render($rendered);
    }
  }

  $variables['js'] = [
    '#attached' => array(
      'library' =>  array(
        'oiko_timeline/comparative_timeline'
      ),
      'drupalSettings' => [
        'oiko_timeline' => [
          $variables['timeline_id'] => [
            'id' => $variables['timeline_id'],
            'defaultOptions' => $variables['default_links'],
            'interactive' => $variables['interactive'],
            'initialData' => $variables['initialData'],
            'pagestate' => $variables['pagestate'],
          ],
        ],
      ],
    ),
  ];
}

/**
 * Implements hook_entity_base_field_info().
 */
function oiko_timeline_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  return \Drupal::service('oiko_timeline.hook_implementations')->entity_base_field_info($entity_type);
}

/**
 * Implements hook_entity_extra_field_info().
 */
function oiko_timeline_entity_extra_field_info() {
  return \Drupal::service('oiko_timeline.hook_implementations')->extra_field_info();
}

/**
 * Implements hook_entity_view_alter()
 */
function oiko_timeline_entity_view_alter(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  return \Drupal::service('oiko_timeline.hook_implementations')->entity_view_alter($build, $entity, $display);
}
