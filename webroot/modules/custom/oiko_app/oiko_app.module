<?php
use Drupal\Component\Utility\Html;
use Drupal\Core\Url;
use Drupal\views\ViewExecutable;


/**
 * Implements hook_theme().
 */
function oiko_app_theme($existing, $type, $theme, $path) {
  return array(
    'oiko_app' => array(
      'variables' => array(
      ),
    ),
    'main_cidoc_search' => array(
      'variables' => array(
        'id' => 'main-search-dropdown',
        'placeholder_map' => 'Search events',
        'no_search_map' => 'Search for events, people, groups, places or objects e.g. \'The battle of Milvian Bridge\' or \'the Xiongnu\'.',
        'placeholder_timeline' => 'Search groups and people',
        'no_search_timeline' => 'Search for communities, empires or groups to compare on your timeline e.g. \'The Roman Empire\' or \'the Han\'.',
        'no_results_text' => 'No results found.',
        'searching_text' => 'Searching through known space and time...',
      ),
    ),
    'user_login_form' => [
      'render element' => 'form',
    ],
  );
}

/**
 * Implements hook_preprocess_oiko_app().
 */
function oiko_app_preprocess_oiko_app(&$variables, $hook) {
  $variables['sidebar'] = [
    '#theme' => 'sidebar',
  ];

  $map = leaflet_map_get_info('Ancient Terrain');
  $map['sidebar'] = TRUE;
  $map['pagestate'] = TRUE;
  $map['timeline'] = TRUE;
  $map['search'] = TRUE;
  $map['clustering'] = TRUE;
  $map['locate'] = TRUE;
  $map['settings']['layerControl'] = FALSE;
  $map['settings']['zoomControl'] = FALSE;
  $map['zoomControl'] = 'bottomright';
  $map['data-url'] = Url::fromRoute('oiko_leaflet.map_page_controller_allEntities')->toString();
  $map['data-url-number-pages'] = 1;
  $height = 'full';

  // @TODO: Bubble the cache metadata.
  if (\Drupal::currentUser()->hasPermission('view own unpublished cidoc entities') || \Drupal::currentUser()->hasPermission('view unpublished cidoc entities')) {
    $map['data-url-per-user'] = Url::fromRoute('oiko_leaflet.map_page_controller_unpublishedEntities')->toString();
  }

  \Drupal::moduleHandler()->alter('oiko_app_main_map', $map);

  $variables['map'] = \Drupal::service('leaflet.service')->leafletRenderMap($map, [], $height);

  $variables['timeline'] = array(
    '#theme' => 'comparative_timeline',
    '#pagestate' => TRUE,
  );

  $variables['js'] = [
    '#attached' => array(
      'library' =>  array(
        'oiko_app/app'
      ),
    ),
  ];
}

/**
 * Implements hook_preprocess_main_cidoc_search().
 */
function template_preprocess_main_cidoc_search(&$variables) {
  // Create a valid HTML ID and make sure it is unique.
  if (!empty($variables['id'])) {
    $variables['attributes']['id'] = Html::getUniqueId($variables['id']);
  }
}

/**
 * Implements hook_views_post_build().
 */
function oiko_app_views_pre_build(ViewExecutable $view) {
  if ($view->id() == 'crm_entity_search') {
    $view->filter['user_id']->value = [Drupal::currentUser()->id() => Drupal::currentUser()->id()];
  }
}

/**
 * Implements hook_toolbar().
 */
function oiko_app_toolbar() {
  $items = [];

  $items['welcome_modal'] = [
    '#cache' => [
      'tags' => [
        'block.welcomeblock',
      ],
    ],
  ];
  if ($block = \Drupal\block\Entity\Block::load('welcomeblock')) {
    $items['welcome_modal']['#cache']['contexts'] = [
      'user.roles',
      'theme',
    ];
    if (!\Drupal::currentUser()->hasPermission('reshow welcome modal')) {
      return $items;
    }
    if ($block->getTheme() == \Drupal::service('theme.manager')->getActiveTheme()->getName()) {
      $items['welcome_modal'] += [
        '#type' => 'toolbar_item',
        'tab' => [
          '#type' => 'html_tag',
          '#tag' => 'button',
          '#value' => t('Welcome modal'),
          '#attributes' => [
            'class' => ['toolbar-icon', 'toolbar-icon-system-admin-content'],
            'aria-pressed' => 'false',
          ],
        ],
        '#wrapper_attributes' => [
          'class' => ['tour-toolbar-tab'],
          'data-open' => 'block-welcomeblock',
        ],
      ];
    }
  }

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function oiko_app_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  if ($form_id != 'user_login_form') {
    return;
  }

  $form['#theme'] = 'user_login_form';
}
