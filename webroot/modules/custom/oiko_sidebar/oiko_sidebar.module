<?php

use Drupal\Core\Block\MainContentBlockPluginInterface;
use Drupal\Core\Block\MessagesBlockPluginInterface;
use Drupal\Core\Block\TitleBlockPluginInterface;
use Drupal\Core\Cache\CacheableMetadata;

/**
 * Implements hook_theme().
 */
function oiko_sidebar_theme($existing, $type, $theme, $path) {
  return array(
    'sidebar' => array(
      'variables' => array(
      ),
    ),
  );
}

/**
 * Implements hook_preprocess().
 */
function template_preprocess_sidebar(&$variables, $hook) {
  $build = [
    '#cache' => [
      'tags' => \Drupal::service('entity_type.manager')->getDefinition('block')->getListCacheTags(),
    ],
  ];
  $blockViewBuilder = \Drupal::service('entity_type.manager')->getViewBuilder('block');
  // Load all region content assigned via blocks.
  $cacheable_metadata_list = [];
  $regions = \Drupal::service('block.repository')->getVisibleBlocksPerRegion($cacheable_metadata_list);
  if (isset($regions['sidebar_legend'])) {
    foreach ($regions['sidebar_legend'] as $key => $block) {
      $block_plugin = $block->getPlugin();
      if ($block_plugin instanceof MainContentBlockPluginInterface) {
        continue;
      }
      elseif ($block_plugin instanceof TitleBlockPluginInterface) {
        continue;
      }
      elseif ($block_plugin instanceof MessagesBlockPluginInterface) {
        continue;
      }
      $build[$key] = $blockViewBuilder->view($block);
    }
  }
  $merged_cacheable_metadata = CacheableMetadata::createFromRenderArray($build);
  foreach ($cacheable_metadata_list as $cacheable_metadata) {
    $merged_cacheable_metadata = $merged_cacheable_metadata->merge($cacheable_metadata);
  }
  $merged_cacheable_metadata->applyTo($build);

  $variables['sidebar_legend'] = $build;
}
